import Head from "next/head";
import Link from "next/link";
import Router from "next/router";
import { useState } from "react";

// styles
import styles from "../../styles/Anime.module.css";

export async function getServerSideProps(ctx) {
  const res = await fetch(
    "http://api.jikan.moe/v4/anime?limit=20&type=tv&start_date=2022"
  );

  const { data } = await res.json();
  if (!res.ok) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      data,
    },
  };
}

// export async function getInitialProps({ req, res }) {
//   // / in your getInitialProps
//   if (res) {
//     // server
//     res.writeHead(302, {
//       Location: "/",
//     });

//     res.end();
//   } else {
//     // client
//     Router.push("/");
//   }
// }

export default function AnimePage({ data }) {
  const [search, setSearch] = useState("");

  async function handleSearch(e) {
    e.preventDefault();
    const res = await fetch(
      "http://api.jikan.moe/v4/anime?limit=20&type=tv&start_date=2022"
    );

    const { data } = await res.json();
    if (!res.ok) {
      return {
        notFound: true,
      };
    }
  }

  return (
    <div>
      <Head>
        <title>Anime List</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.sectionHeader}>
        <h1>List Anime</h1>

        <form onSubmit={handleSearch}>
          <input
            type="text"
            name="search"
            id="search"
            className={styles.inputSearch}
            autoComplete="off"
            value={search}
            onChange={(e) => setSearch(e.target.value)}
            minLength={5}
            maxLength={20}
          />
          <button type="submit" className={styles.btnSearch}>
            Search
          </button>
        </form>
      </div>
      <div className={styles.animesContainer}>
        {data.map((anime, index) => {
          return (
            <div className={styles.card} key={anime.mal_id}>
              <div className={styles.rating}>{anime.score}</div>

              <img
                src={anime.images.jpg.image_url}
                alt="img"
                className={styles.animeImage}
              />

              <div className={styles.animeContent}>
                <Link href={`/anime/${anime.mal_id}`}>
                  <h2 className={styles.title}>{anime.title}</h2>
                </Link>
                {/* <div className={styles.genres}>
                  {anime.genres.map((genre) => {
                    return (
                      <span className={styles.genre} key={genre.mal_id}>
                        {genre.name}
                      </span>
                    );
                  })} */}
                {/* <span className={styles.genre}>Action</span>
                  <span className={styles.genre}>Adventure</span>
                  <span className={styles.genre}>Fantasy</span> */}
                {/* </div> */}
              </div>
            </div>
          );
        })}
      </div>
      {/* <div className={styles.animesContainer}>
        <div className={styles.card}>
          <div className={styles.rating}>8.7</div>

          <img
            src="https://cdn.myanimelist.net/r/160x220/images/anime/1530/120110.webp?s=4aaac682a2a4727af927349fa2eb9260"
            alt="img"
            className={styles.animeImage}
          />

          <div className={styles.animeContent}>
            <h2 className={styles.title}>Overlord</h2>
            <div className={styles.genres}>
              <span className={styles.genre}>Action</span>
              <span className={styles.genre}>Adventure</span>
              <span className={styles.genre}>Fantasy</span>
            </div>
          </div>
        </div>
      </div> */}
    </div>
  );
}
