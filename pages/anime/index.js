import getAnimeList from "libs/getAnimeList";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { useState } from "react";

// styles
import styles from "../../styles/Anime.module.css";

export async function getServerSideProps(ctx) {
  try {
    const { data } = await getAnimeList();
    return {
      props: {
        data,
      },
    };
  } catch (error) {
    return {
      error,
      notFound: true,
    };
  }
}

export default function AnimePage({ data, error }) {
  const [search, setSearch] = useState("");
  const router = useRouter();

  async function handleSearch(e) {
    e.preventDefault();
    router.replace({
      pathname: "/anime/search",
      query: {
        q: search,
      },
    });
  }

  return (
    <div>
      <Head>
        <title>Anime List</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.sectionHeader}>
        <h1>List Anime</h1>
        {error && <span>{error.message}</span>}

        <form onSubmit={handleSearch}>
          <input
            type="text"
            name="search"
            id="search"
            className={styles.inputSearch}
            autoComplete="off"
            value={search}
            onChange={(e) => setSearch(e.target.value)}
            minLength={5}
            maxLength={20}
          />
          <button type="submit" className={styles.btnSearch}>
            Search
          </button>
        </form>
      </div>
      <div className={styles.animesContainer}>
        {data.map((anime, index) => {
          return (
            <div className={styles.card} key={anime.mal_id}>
              {anime.score && (
                <div className={styles.rating}>
                  {/* icon */}
                  <Image width={15} height={15} src="/star-icon.svg" />
                  {anime.score}
                </div>
              )}

              <Image
                loading="lazy"
                style={{ objectFit: "cover", aspectRatio: "3/4" }}
                src={anime.images.jpg.large_image_url}
                alt={anime.title}
                width={150}
                height={200}
                layout="responsive"
                className={styles.animeImage}
              />

              <div className={styles.animeContent}>
                <Link href={`/anime/${anime.mal_id}`}>
                  <a>
                    <h2 className={styles.title}>{anime.title}</h2>
                  </a>
                </Link>

                {anime.season && (
                  <p style={{ textDecoration: "underline" }}>
                    {anime.season}, {anime.year}
                  </p>
                )}
              </div>
            </div>
          );
        })}
      </div>
    </div>
  );
}
